apiVersion: apps/v1
kind: Deployment
metadata:
  name: $(<./variables/name.txt):$(<./variables/docker_image_tag.txt)
  labels:
    app: $(<./variables/name.txt):$(<./variables/docker_image_tag.txt)
  namespace: default
spec:
  replicas: $(<./variables/pod_replica_set.txt)
  selector:
    matchLabels:
      app: $(<./variables/name.txt):$(<./variables/docker_image_tag.txt)
  strategy:
    rollingUpdate:
      maxSurge: $(<./variables/max_surge.txt)
      maxUnavailable: $(<./variables/max_unavailable.txt)
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: $(<./variables/name.txt):$(<./variables/docker_image_tag.txt)
    spec:
      containers:
        - image: $(<./variables/path.txt):$(<./variables/docker_image_tag.txt)
          imagePullPolicy: Always
          name: $(<./variables/name.txt):$(<./variables/docker_image_tag.txt)
          ports:
            - containerPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: $(<./variables/name.txt):$(<./variables/docker_image_tag.txt)
  labels:
    app: $(<./variables/name.txt):$(<./variables/docker_image_tag.txt)
spec:
  type: LoadBalancer
  selector:
    app: $(<./variables/name.txt):$(<./variables/docker_image_tag.txt)
  ports:
    - port: 80
      targetPort: 80
      nodePort: 30000
      protocol: TCP
